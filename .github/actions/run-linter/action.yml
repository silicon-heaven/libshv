name: Run linter
description: "Run a linter on all changed files"
inputs:
  lint_program_with_args:
    description: "Which program to run"
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup CMake
      uses: ./.github/actions/cmake
      env:
        CC: clang-15
        CXX: clang++-15
      with:
        qt_version: 6.10.0
        qt_target: desktop
        qt_arch: linux_gcc_64
        use_qt6: ON
        modules: qtserialport qtwebsockets
        ccache: 'false'
        additional_cmake_args: -DCMAKE_GLOBAL_AUTOGEN_TARGET=ON -DCMAKE_AUTOGEN_ORIGIN_DEPENDS=OFF

    # https://bugs.launchpad.net/ubuntu/+source/clazy/+bug/2086665/comments/4
    - name: Workaround for clazy
      shell: bash
      run: |
        sudo apt-get remove gcc-14
        sudo apt-get autoremove

    - uses: mjp41/workaround8649@c8550b715ccdc17f89c8d5c28d7a48eeff9c94a8
      if: runner.os == 'Linux'
      with:
        os: ubuntu-24.04

    - name: Install ctcache
      uses: syyyr/clang-tidy-cache-action@v1.1.0

    - name: Build autogenerated stuff
      shell: bash
      run: cmake --build ${{github.workspace}}/build --parallel "$(nproc)" --target autogen

    - name: Mark generated files as system
      shell: bash
      run: sed -i "s@-I$(pwd)/build@-isystem $(pwd)/build@" build/compile_commands.json

    - name: Run the linter
      shell: bash
      run: |
        readarray -t FILES < <(find '${{github.workspace}}' -name \*.cpp |
          grep -v 3rdparty/ |
          grep -v build.*/ |
          grep -v "libshvchainpack/tests/test_accessgrant.cpp"
          )
        printf '%s\n' "${FILES[@]}" | parallel --verbose --jobs "$(nproc)" --plus _=[{#}/{##}] ${{ inputs.lint_program_with_args }} {}
